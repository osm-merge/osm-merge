//
// Copyright (c) 2025 OpenStreetMap US
//
//     This is free software: you can redistribute it and/or modify
//     it under the terms of the GNU General Public License as published by
//     the Free Software Foundation, either version 3 of the License, or
//     (at your option) any later version.
//
//     This project is distributed in the hope that it will be useful,
//     but WITHOUT ANY WARRANTY; without even the implied warranty of
//     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//     GNU General Public License for more details.
//
//     You should have received a copy of the GNU General Public License
//     along with Underpass.  If not, see <https://www.gnu.org/licenses/>.
//

#ifndef __OSMPBF_HH_
#define __OSMPBF_HH_

// This is generated by autoconf
#ifdef HAVE_CONFIG_H
#include "osmconfig.h"
#endif

#include <map>

#include <osmpbfreader.h>
using namespace osmpbfreader;

#include "osmobjects.hh"
using namespace osmobjects;

// namespace osmpbf {

class PBF_Parser {
private:
    std::map<long int, OsmNode> node_cache;
    std::map<long int, OsmWay> way_cache;
    std::map<long int, OsmRelation> relation_cache;
public:
    /// This method is called every time a Node is read
    void node_callback(uint64_t /*osmid*/, double /*lon*/, double /*lat*/, const Tags &/*tags*/);

    /// This method is called every time a Way is read
    /// refs is a vector that contains the reference to the nodes that compose the way
    void way_callback(uint64_t /*osmid*/, const Tags &/*tags*/, const std::vector<uint64_t> &/*refs*/);

    /// This method is called every time a Relation is read
    /// refs is a vector of pair corresponding of the relation type (Node, Way, Relation) and the reference to the object
    void relation_callback(uint64_t /*osmid*/, const Tags &/*tags*/, const References & /*refs*/);

    // bool readPBF();
};

//} //  end of osmpbf namespace
#endif  // end of __OSMPBF_HH_

// Local Variables:
// mode: C++
// indent-tabs-mode: nil
// End:
